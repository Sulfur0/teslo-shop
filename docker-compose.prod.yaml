version: '3'

services:
  tesloshopapp:
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    image: tesloshop-docker
    container_name: tesloshopapp
    restart: always # reiniciar el contenedor si se detiene
    ports:
      - '${PORT}:${PORT}'
    # working_dir: /var/www/pokedex
    environment:
      STAGE: ${STAGE}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_ACCESS_KEY_ID: ${AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${AWS_S3_SECRET_ACCESS_KEY}
      UPLOAD_RATE_TTL: ${UPLOAD_RATE_TTL}
      UPLOAD_RATE_LIMIT: ${UPLOAD_RATE_LIMIT}
      HOST_API: ${HOST_API}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    # volumes:
    #   - ./:/var/www/tesloshop

  db:
    image: postgres:14.3
    container_name: teslodb
    restart: always
    ports:
      - '5432:5432'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mongo:/data/db
